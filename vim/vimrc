syntax enable

" size of a hard tabstop
set tabstop=4

" size of an indent
set shiftwidth=4

" insert space for tab
set expandtab

set smarttab

" do smart indent for code, the details can been viewd by typing :help smartindent
" and :help autoindent in vim
set autoindent
set smartindent

" 可用鼠标选中和移动光标
set mouse=a

" 显示行号
set number

" -- 状态行设置--
" 总显示最后一个窗口的状态行；设为1则窗口数多于一个的时候显示最后一个窗口的状态行；0不显示最后一个窗口的状态行
"set laststatus=2

" 标尺，用于显示光标位置的行号和列号，逗号分隔。每个窗口都有自己的标尺。如果窗口有状态行，标尺在那里显示。否则，它显示在屏幕的最后一行上。
set ruler

" -- 命令行设置--
set showcmd "命令行显示输入的命令
"set showmode "命令行显示vim处在的模式,默认开启，所以就注释掉了

" --find setting--
set incsearch "输入字符串就显示匹配点
set hlsearch  "高亮显示所有匹配点,可以使用 :nohlsearch 来暂时的关闭高亮，再次搜索就会再次高亮

" --代码折叠--
set foldmethod=syntax " 用语法高亮来定义折叠
set foldlevel=100  " 启动vim时不要自动折叠
set foldcolumn=5 " 设置折叠栏宽度

" -- 代码tags --
map <F5> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
imap <F5> <ESC>:!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
set tags=./tags "add current directory's generated tags file

" -- 自动补全--
set nocp
filetype on
filetype plugin on

"--mnicppcomplete setting --
" 按下F3自动补全代码，注意该映射语句后不能有其他字符，包括tab；否则按下F3会自动补全一些乱码
imap <F3> <C-X><C-O>
" 按下F2根据头文件内关键字补全
imap <F2> <C-X><C-I>
set completeopt=menu,menuone " 关掉智能补全时的预览窗口
let OmniCpp_MayCompleteDot = 1 " autocomplete with .
let OmniCpp_MayCompleteArrow = 1 " autocomplete with ->
let OmniCpp_MayCompleteScope = 1 " autocomplete with ::
let OmniCpp_SelectFirstItem = 2 " select first item (but don't insert)
let OmniCpp_NamespaceSearch = 2 " search namespaces in this and included files
let OmniCpp_ShowPrototypeInAbbr = 1 " show function prototype in popup window
let OmniCpp_GlobalScopeSearch=1 " enable the global scope search
let OmniCpp_DisplayMode=1 " Class scope completion mode: always show all members
let OmniCpp_DefaultNamespaces=["std"]
let OmniCpp_ShowScopeInAbbr=1 " show scope in abbreviation and remove the last column
let OmniCpp_ShowAccess=1
